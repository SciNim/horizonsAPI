* Horizons API - JPL / NASA API for solar system data

[[https://ssd.jpl.nasa.gov/horizons/manual.html][JPL Horizons]] is a web app and API for access to up to date and
historic information about parameters of the solar system,
e.g. orbital parameters.

This library is an ultra basic (for now?) interface to the API. It
requires you to manually construct tables for the options you
want. Best to look at the documentation and the web app:

https://ssd.jpl.nasa.gov/horizons/app.html

To give a simple example though. Assume we want to know the distance
between Sun and Earth for every day of last year (2022). We can do
that as follows (see [[examples/sun_earth_distance.nim]])
#+begin_src nim :tangle examples/sun_earth_distance.nim
import ../horizonsapi
import std / [asyncdispatch, strutils] 
# let's try a simple request
let comOpt = { #coFormat : "json", # data returned as "fake" JSON 
               coMakeEphem : "YES", 
               coCommand : "10",  # our target is the Sun, index 10
               coEphemType : "OBSERVER" }.toTable # observational parameters
let ephOpt = { eoCenter : "coord@399", # observational point is a coordinate on Earth (Earth idx 399)
               eoStartTime : "2022-01-01", 
               eoStopTime : "2022-12-31",
               eoStepSize : "1 HOURS", # in 1 hour steps
               eoCoordType : "GEODETIC", 
               eoSiteCoord : "+0.0,+51.477806,0", # Greenwich coordinates, because why not?
                                                  # First East/West than North/South! Last field is altitude
               eoCSVFormat : "YES" }.toTable # data as CSV within the JSON (yes, really)
var q: Quantities
q.incl 20 ## Observer range! In this case range between our coordinates on Earth and target

let fut = request(comOpt, ephOpt, q) # construct the request & perform it async
## If multiple we would `poll`! 
let res = fut.waitFor() # wait for it

let resJ = res.parseJson# result is json, so can parse it
for l in resJ["result"].getStr.splitLines()[0 .. 30]:
  echo l
#+end_src
#+begin_src sh
*******************************************************************************
 Revised: July 31, 2013                  Sun                                 10

 PHYSICAL PROPERTIES (updated 2018-Aug-15):
  GM, km^3/s^2          = 132712440041.93938  Mass, 10^24 kg        = ~1988500
  Vol. mean radius, km  = 695700              Volume, 10^12 km^3    = 1412000
  Solar radius (IAU)    = 696000 km           Mean density, g/cm^3  = 1.408
  Radius (photosphere)  = 696500 km           Angular diam at 1 AU  = 1919.3"
  Photosphere temp., K  = 6600 (bottom)       Photosphere temp., K  = 4400(top)
  Photospheric depth    = ~500 km             Chromospheric depth   = ~2500 km
  Flatness, f           = 0.00005             Adopted sid. rot. per.= 25.38 d
  Surface gravity       =  274.0 m/s^2        Escape speed, km/s    =  617.7
  Pole (RA,DEC), deg.   = (286.13, 63.87)     Obliquity to ecliptic = 7.25 deg.
  Solar constant (1 AU) = 1367.6 W/m^2        Luminosity, 10^24 J/s = 382.8
  Mass-energy conv rate = 4.260 x 10^9 kg/s   Effective temp, K     = 5772
  Sunspot cycle         = 11.4 yr             Cycle 24 sunspot min. = 2008 A.D.

  Motion relative to nearby stars = apex : R.A.= 271 deg.; DEC.= +30 deg.
                                    speed: 19.4 km/s (0.0112 au/day)
  Motion relative to 2.73K BB/CBR = apex : l= 264.7 +- 0.8; b= 48.2 +- 0.5 deg.
                                    speed: 369 +-11 km/s
*******************************************************************************


*******************************************************************************
Ephemeris / API_USER Wed Jun 28 06:51:58 2023 Pasadena, USA      / Horizons
*******************************************************************************
Target body name: Sun (10)                        {source: DE441}
Center body name: Earth (399)                     {source: DE441}
Center-site name: (user defined site below)
*******************************************************************************
#+end_src

The actual body of the requested data starts further down.
